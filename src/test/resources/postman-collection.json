{
  "info": {
    "_postman_id": "4d8a42a5-6463-4e0a-bd0d-a4fb5370f40c",
    "name": "Multi-user File Sharing",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "37613439"
  },
  "item": [
    {
      "name": "User1 - View All Files",
      "request": {
        "method": "GET",
        "header": []
      },
      "response": []
    },
    {
      "name": "User2 - View All Files",
      "request": {
        "method": "GET",
        "header": []
      },
      "response": []
    },
    {
      "name": "User1 - Create file1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful POST request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ]
        },
        "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
      },
      "response": []
    },
    {
      "name": "User2 - Create file2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful POST request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ]
        },
        "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
      },
      "response": []
    },
    {
      "name": "User1 - View All Permissions",
      "request": {
        "method": "GET",
        "header": []
      },
      "response": []
    },
    {
      "name": "User1 - View File2",
      "request": {
        "method": "GET",
        "header": []
      },
      "response": []
    },
    {
      "name": "User2 - View File1",
      "request": {
        "method": "GET",
        "header": []
      },
      "response": []
    },
    {
      "name": "User2 - View All Permissions",
      "request": {
        "method": "GET",
        "header": []
      },
      "response": []
    },
    {
      "name": "User1 - Update file1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User1 - Update file2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User2 - Update file1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User2 - Update file2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User1 - Share file1 with User2 - Viewable",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User1 - Share file1 with User2 - Editable",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User2 - Share file2 with User2 - Editable",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User2 - Share file2 with User2 - Deletable",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User1 - Delete file1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful DELETE request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User1 - Delete file2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful DELETE request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User1 - Lock file1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "User1 - Unlock file1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/info?id=1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "info"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
      },
      "response": []
    }
  ]
}